               # Первая функция ord
# ord() - это ордиональ функция, и он тока одну символь точнее букву принимает, ord проверяет порядоковое значение строк кода
# print(ord('m') когда маленькая буква то оно дает больше цифр, когда принтуешь показывает цифру (109)
# print(ord('M')) когда большая буква то дает меньше цифр
               # Вторая функция chr
# chr это функция наоборот показывает буквы, ord показывает цифр
# print(chr('109')) когда принтуешь показывает букву (m)
# True приравнивается к (1)
# False приравнивается к (0)
# False относяться 0, [], {}, set(), frozenset(), None
# > больше
# < меньше
# == равно
# =! не равно
# >= больше или равно
# <= меньше или равно
# = это присваемое
# and, or, (и. или) это сложные выражение 
# a = 15
# b = 25
# print( a >= 15 and b < 30) True
# Not - это отрицание. превращает ложь в впраду, а вправду превращает в ложь
# x = 20
# print( not x > 10) если тут даже правду но в принте выйдет ложь так как перед ним функция not стоит
# if else elif (если, иначе, еслиначе) и это 3 выражение, если одно из них не сработает то объязательно другое выражение сработает только одно условие из 3 сработает
'''===Тернарный оператор'''
# с помощью тернарный оператор if elif else можно в одну строчку написать, но нельзя пользовать когда будешь пользовать два if
# a = 'MAKERS'
# b = 7
# print(a if b else 'makers')






'''===Типы данных=='''
'''Числа'''
# сложные числа к ним относятся (int,float,complex,)
# str, list,tuple,dick,bool,set
# number = 5
# print(number)

# string = 'Kalinara'
# print(string)
# my_list - всегда начинается с [] это списки
# my_list = [1, 2, 3, 4]
# print(my_list)

'''===Изменяемые и неизменяемые типы данных'''
# к неизменяемым типы данных относятся (int,float,complex,str,tuple,bool)
# к изменяемый относятся (list,dict,set)
# для str всегда пользуется - ""
# для list всегда пользуется - []
# для dict - всегда пользуется - {}

# number1 = 5
# number2 = 6
# print(number1+number2)

# num1 = 3
# num2 = 3
# result = num1 - num2
# print(result)

# pep8
# 1. смысл переменной
# 2. ключевые слова неьзя пользоватся
# 3. переменная всегда должна начинаться с буквой или _
# 4. если хочешь 2 переменные в одну строчку написать то нужно всегда писать с помощью _ например first_number

# input - ввод
# print - вывод


    # boolean - логическое значение True или False
    # int - представляет целое число, например, 1, 4, 8, 50.
    # float - представляет число с плавающей точкой, например, 1.2 или 34.76
    # complex - комплексные числа
    # str - строки, например hello, Makers. В Python 3.x строки представляют набор символов в кодировке Unicode
    # bytes - последовательность чисел в диапазоне 0-255
    # byte array - массив байтов, аналогичен bytes с тем отличием, что может изменяться
    # list - список
    # tuple - кортеж
    # set - неупорядоченная коллекция уникальных объектов
    # frozen set - то же самое, что и set, только не может изменяться (immutable)
    # dict - словарь, где каждый элемент имеет ключ и значение


'''===Типы данных: СТРОКИ=='''
# \ - это экранирование
# \n - это перенос на следующую строку
# \n\n - это уже переносит на 2 след строку и т.д
# \n\t - это переносит на след строку но на середину по горизантолю
# \v - это по вертикали 
# str = "Kalina'ra"
# print(str)
# str = "Kalinara,\vAngelina,\vAyaruu"
# print(str)
# r'' - это сырая строка
# len() - это находит длину строки
# str = 'Kalinara Ayaruu' # len()
# print(len(str))
'''[x:y]''' # это срезы
# str = 'Kalinara'
# print(str[:3])

# str = 'kalinara' kalinara пишет наоборот 
# print(str[::-1])

'''===Методы строк=='''
# find() - показывает сколько букв есть в строке но только считает первый а для того чтобы и второй считал нам нужен переменная rfind()
# str = 'Kalinara Ayaruu'
# print(str.rfind('Aya'))

# replace - это заменяет строк
# split() - это разделитель точнее list
# str = 'Kalinara Ayaruu' # если захочу в середине Aya*ruu пробел сделать то с помощью * можно сделать пробел
# print(str.split())
# isdigit() - всегда возвращает true так как всегда работает на строк 
# isalpha() - всегда возвращает true так как всегда работает на цифр
# isalnum() - всегда тут должен быть цифры и строки
# islower() - всегда надо писать с большой буквой если напишем с маленькой то будет ложь
# isspace() -  надо объязательно пользовать пробел \ и т.д
# istitle() - всегда надо писать с маленькой буквой
# upper() - всегда маленькую строку все пишет с большими буквами
# lower() - пишет с маленькой
# startswith() - проверяет начинается ли строка с начала
# endswith() - проверяет начинается ли строка с конца
# join() - все вместе пишет строки и всегда надо писать с List_
# list_ = ['k', 'a', 'l', 'i', 'n', 'a', 'r', 'a']
# print(''.join(list_)) 
# capitalize() - пишет первую букву с большим буквой а title вторую слово если есть в одном строке 2 слово то пишет с большим буквой второе слово 
# count() - показывает сколько похожих букв есть в строке
# lstrip() - удаляет в начале пробелов
# rstrip() - удаляет в конце пробелов
# sprip() - удаляется в начале и в конце пробелов
# swapcase() - в начале строке большего букву делает маленькую а остальные все с большими 
# format() - это форматирование строк  f''
# name = input()
# last_name = input()
# str = f'пока {name} {last_name}'
# print(str)



'''===range()===''' # это функция имеет 3 формы
# 1. end - это конец
# 2. start - это с начала
# 3. step - пропускает цифры и т.д
# эти 3 формы всегда должны идти по очереди (start,end,step)
# for i in range(1,21): # возводить куб
#     print(i ** 2)

'''===сравнение списков=='''
# == > < <= и т.д
'''===индексация===''' 
# как изменить
# numbers = [1, True,"Makers", "hello"]
# numbers[3] = 'Kalinara'
# print(numbers)
'''===Методы списков==='''
# append() - добавляет еще одно слово или число в конце
# list_ = ['Kalinara']
# list_.append('Ayaruu')
# print(list_)   
# extend() - изменяет и рассширает тоесть 2 строку в одну строку добавляет
# list_1 = ['Kalinara']
# list_2 = ['Ayaruu']    # в одну строку добавили калинара и айаруу
# list_1.extend(list_2)
# print(list_1)
# insert() - слово или цифру в середину добавляет 
# list_ = [1 , 2 , 3, 4]
# list_.insert(1, '0')
# print(list_)
# remove() - удаляет
# pass - ничего не делает
# pop() - удаляет и обратно возвращает
# count() - показывает сколько похожих букв или цифр в одной строке
# sort() - сортирует точнее ставляет по алфавиту строк
# list_ = ['Kalinara', 'Cat', 'Ayaruu']
# list_.sort(key=len)
# print(list_)
# reverse() - строку обратно назад показывает
# list_ = ['Kalinara', 'Cat', 'Ayaruu']
# list_.reverse()
# print(list_)
# max() - наибольшая функция
# min() - наименьшая функция
# sum() - cчитает сумму сколько есть в строке
# sorted() - цифры поставляет по очереди
